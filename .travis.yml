language: cpp
compiler:
  - clang
  - gcc
matrix:
  fast_finish: true
  exclude:
    - compiler: gcc
    - compiler: clang
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0 gcc-multilib g++-multilib
      env:
         - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
      compiler:
         - clang
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5 g++-5 gcc-multilib g++-multilib gcc-5-multilib g++-5-multilib
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      compiler:
         - gcc
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6 gcc-6-multilib g++-6-multilib gcc-multilib g++-multilib
      env:
         - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      compiler:
         - gcc
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7 gcc-7-multilib g++-7-multilib gcc-multilib g++-multilib
      env:
         - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      compiler:
         - gcc
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8 gcc-8-multilib g++-8-multilib gcc-multilib g++-multilib
      env:
         - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      compiler:
         - gcc
    - stage: after UT
      name: valgrind
      compiler:
        - gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8 valgrind gcc-8-multilib g++-8-multilib gcc-multilib g++-multilib
      before_install:
         - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
         - sed -i 's/PERFORMANCE_TEST_NUM_OF_MSG = .*/PERFORMANCE_TEST_NUM_OF_MSG=20000;/' LogTesting/PerformanceTest.h
      script: 
        - cd REL64
        - valgrind --log-file=%pvalgrind.log -v -v --tool=memcheck --child-silent-after-fork=no --track-fds=yes --time-stamp=no --xml=no --num-callers=100 --error-exitcode=1 --fullpath-after=src/ --time-stamp=yes --leak-check=full --leak-resolution=high --show-leak-kinds=all --errors-for-leak-kinds=all --leak-check-heuristics=all --undef-value-errors=yes --show-mismatched-frees=yes --suppressions=../leak.supp --error-exitcode=2 ./logTesting --gtest_filter=-LoggerManagerTest.testSlowPrinterBug ; (($? != 2)) && true
        - cd ..
        - cd DEB64
        - valgrind --log-file=%pvalgrind.log -v -v --tool=memcheck --child-silent-after-fork=no --track-fds=yes --time-stamp=no --xml=no --num-callers=100 --error-exitcode=1 --fullpath-after=src/ --time-stamp=yes --leak-check=full --leak-resolution=high --show-leak-kinds=all --errors-for-leak-kinds=all --leak-check-heuristics=all --undef-value-errors=yes --show-mismatched-frees=yes --suppressions=../leak.supp --error-exitcode=2 ./logTesting --gtest_filter=-LoggerManagerTest.testSlowPrinterBug ; (($? != 2)) && true
        - cd ..
        - find . -name '*valgrind*' -print -exec cat {} \;
    - stage: after UT
      name: valgrind
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0 valgrind gcc-multilib g++-multilib
      before_install:
         - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
         - sed -i 's/PERFORMANCE_TEST_NUM_OF_MSG = .*/PERFORMANCE_TEST_NUM_OF_MSG=20000;/' LogTesting/PerformanceTest.h
      script: 
        - cd REL64
        - valgrind --log-file=%pvalgrind.log -v -v --tool=memcheck --child-silent-after-fork=no --track-fds=yes --time-stamp=no --xml=no --num-callers=100 --error-exitcode=1 --fullpath-after=src/ --time-stamp=yes --leak-check=full --leak-resolution=high --show-leak-kinds=all --errors-for-leak-kinds=all --leak-check-heuristics=all --undef-value-errors=yes --show-mismatched-frees=yes --suppressions=../leak.supp --error-exitcode=2 ./logTesting --gtest_filter=-LoggerManagerTest.testSlowPrinterBug ; (($? != 2)) && true
        - cd ..
        - cd DEB64
        - valgrind --log-file=%pvalgrind.log -v -v --tool=memcheck --child-silent-after-fork=no --track-fds=yes --time-stamp=no --xml=no --num-callers=100 --error-exitcode=1 --fullpath-after=src/ --time-stamp=yes --leak-check=full --leak-resolution=high --show-leak-kinds=all --errors-for-leak-kinds=all --leak-check-heuristics=all --undef-value-errors=yes --show-mismatched-frees=yes --suppressions=../leak.supp --error-exitcode=2 ./logTesting --gtest_filter=-LoggerManagerTest.testSlowPrinterBug ; (($? != 2)) && true
        - cd ..
        - find . -name '*valgrind*' -print -exec cat {} \;
    - stage: after UT
      name: cppcheck
      addons:
        apt:
          packages:
            - cppcheck
      install: skip
      script:
        - cppcheck --enable=all --inconclusive --xml --xml-version=2 Log LogTesting 2> cppcheck.xml
        - cat cppcheck.xml
install:
    - eval "${MATRIX_EVAL}"
    - OLD_CXXFLAGS=$CXXFLAGS
    - OLD_CFLAGS=$CFLAGS
    - RESET_MATRIX="export LDFLAGS= && export CXXFLAGS=$OLD_CXXFLAGS && export CFLAGS=$OLD_CFLAGS"
    - export BUILD_TYPE=Release && export BUILD_ARCH=32 && export CXXFLAGS="$CXXFLAGS -m32" && export CFLAGS="$CFLAGS -m32" && export LDFLAGS=-latomic;mkdir REL32;cd REL32;cmake ../ -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - make
    - cd ..
    - eval "${RESET_MATRIX}"
    - export BUILD_TYPE=Release && export BUILD_ARCH=64;mkdir REL64;cd REL64;cmake ../ -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - make
    - cd ..
    - eval "${RESET_MATRIX}"
    - export BUILD_TYPE=Debug && export BUILD_ARCH=32 && export LIB_POSTFIX=d && export CXXFLAGS="$CXXFLAGS -m32" && export CFLAGS="$CFLAGS -m32" && export LDFLAGS=-latomic;mkdir DEB32;cd DEB32;cmake ../ -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - make
    - cd ..
    - eval "${RESET_MATRIX}"
    - export BUILD_TYPE=Debug && export BUILD_ARCH=64 && export LIB_POSTFIX=d;mkdir DEB64;cd DEB64;cmake ../ -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - make
    - cd ..
before_script:
  - |
    echo '{
    standartLibrary
    Memcheck:Leak
    match-leak-kinds: reachable
    fun:malloc
    obj:/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.26
    fun:call_init.part.0
    fun:call_init
    fun:_dl_init
    obj:/lib/x86_64-linux-gnu/ld-2.19.so
    }' > leak.supp
script:
  - cd REL32 
  - ./logTesting --gtest_output="xml:testresults.xml"
  - cd ..
  - cd REL64
  - ./logTesting --gtest_output="xml:testresults.xml"
  - cd ..
  - cd DEB32
  - ./logTesting --gtest_output="xml:testresults.xml"
  - cd ..
  - cd DEB64
  - ./logTesting --gtest_output="xml:testresults.xml"
  - cd ..
  - find . -name '*/testresults.xml' -print -exec cat {} \;
